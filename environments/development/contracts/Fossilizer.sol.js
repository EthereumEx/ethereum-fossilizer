// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"hash","type":"uint256"},{"name":"path","type":"string"},{"name":"computer","type":"string"}],"name":"fossilizeDocument","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"emails","outputs":[{"name":"sender","type":"address"},{"name":"subject","type":"string"},{"name":"emailFrom","type":"string"},{"name":"emailTo","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"hash","type":"uint256"},{"name":"subject","type":"string"},{"name":"emailFrom","type":"string"},{"name":"emailTo","type":"string"}],"name":"fossilizeEmail","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"documents","outputs":[{"name":"sender","type":"address"},{"name":"path","type":"string"},{"name":"computer","type":"string"}],"type":"function"}],
    binary: "60606040526107d6806100126000396000f3606060405260e060020a600035046353b62c4b811461003c578063695a7d49146101565780636f656be314610187578063c2ed2b05146102d0575b005b60408051602060248035600481810135601f810185900485028601850190965285855261003a9581359591946044949293909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a0190935282825296989760649791965060249190910194509092508291508401838280828437509496505050505050506000838152602081815260408220805473ffffffffffffffffffffffffffffffffffffffff19163317815584516001918201805481865294849020909460029381161561010002600019011692909204601f9081018490048301939192918701908390106105a657805160ff19168380011785555b506105d69291505b8082111561063b5760008155600101610142565b6102fb60043560016020819052600091825260409091208054600160a060020a031691810190600281019060030184565b60408051602060248035600481810135601f810185900485028601850190965285855261003a9581359591946044949293909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a01909352828252969897608497919650602491909101945090925082915084018382808284375094965050505050505060008481526001602081815260408320805473ffffffffffffffffffffffffffffffffffffffff191633178155820180548751828652948390209194600294821615610100026000190190911693909304601f9081018390048201939288019083901061067757805160ff19168380011785555b506106a7929150610142565b61048b60043560006020819052908152604090208054600160a060020a031690600181019060020183565b60408051600160a060020a03861681526080602082018181528654600260018216156101000260001901909116049183018290529192830190606084019060a08501908890801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b5050848103835286546002600182161561010002600019019091160480825260209190910190879080156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b5050848103825285546002600182161561010002600019019091160480825260209190910190869080156104775780601f1061044c57610100808354040283529160200191610477565b820191906000526020600020905b81548152906001019060200180831161045a57829003601f168201915b505097505050505050505060405180910390f35b60408051600160a060020a038516815260606020820181815285546002600182161561010002600019019091160491830182905291928301906080840190869080156105185780601f106104ed57610100808354040283529160200191610518565b820191906000526020600020905b8154815290600101906020018083116104fb57829003601f168201915b50508381038252845460026001821615610100026000190190911604808252602091909101908590801561058d5780601f106105625761010080835404028352916020019161058d565b820191906000526020600020905b81548152906001019060200180831161057057829003601f168201915b50509550505050505060405180910390f35b5050505050565b8280016001018555821561013a579182015b8281111561013a5782518260005055916020019190600101906105b8565b50506000838152602081815260408220835160029182018054818652948490209094600181161561010002600019011692909204601f90810184900483019391929186019083901061063f57805160ff19168380011785555b5061059f929150610142565b5090565b8280016001018555821561062f579182015b8281111561062f578251826000505591602001919060010190610651565b505050505050565b828001600101855582156102c4579182015b828111156102c4578251826000505591602001919060010190610689565b50506000848152600160208181526040832085516002918201805481875295849020909594851615610100026000190190941691909104601f908101839004840193919287019083901061070e57805160ff19168380011785555b5061073e929150610142565b82800160010185558215610702579182015b82811115610702578251826000505591602001919060010190610720565b5050600084815260016020818152604083208451600391909101805481865294839020909460029481161561010002600019011693909304601f90810183900484019391928601908390106107a657805160ff19168380011785555b5061066f929150610142565b8280016001018555821561079a579182015b8281111561079a5782518260005055916020019190600101906107b856",
    unlinked_binary: "60606040526107d6806100126000396000f3606060405260e060020a600035046353b62c4b811461003c578063695a7d49146101565780636f656be314610187578063c2ed2b05146102d0575b005b60408051602060248035600481810135601f810185900485028601850190965285855261003a9581359591946044949293909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a0190935282825296989760649791965060249190910194509092508291508401838280828437509496505050505050506000838152602081815260408220805473ffffffffffffffffffffffffffffffffffffffff19163317815584516001918201805481865294849020909460029381161561010002600019011692909204601f9081018490048301939192918701908390106105a657805160ff19168380011785555b506105d69291505b8082111561063b5760008155600101610142565b6102fb60043560016020819052600091825260409091208054600160a060020a031691810190600281019060030184565b60408051602060248035600481810135601f810185900485028601850190965285855261003a9581359591946044949293909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a01909352828252969897608497919650602491909101945090925082915084018382808284375094965050505050505060008481526001602081815260408320805473ffffffffffffffffffffffffffffffffffffffff191633178155820180548751828652948390209194600294821615610100026000190190911693909304601f9081018390048201939288019083901061067757805160ff19168380011785555b506106a7929150610142565b61048b60043560006020819052908152604090208054600160a060020a031690600181019060020183565b60408051600160a060020a03861681526080602082018181528654600260018216156101000260001901909116049183018290529192830190606084019060a08501908890801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b5050848103835286546002600182161561010002600019019091160480825260209190910190879080156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b5050848103825285546002600182161561010002600019019091160480825260209190910190869080156104775780601f1061044c57610100808354040283529160200191610477565b820191906000526020600020905b81548152906001019060200180831161045a57829003601f168201915b505097505050505050505060405180910390f35b60408051600160a060020a038516815260606020820181815285546002600182161561010002600019019091160491830182905291928301906080840190869080156105185780601f106104ed57610100808354040283529160200191610518565b820191906000526020600020905b8154815290600101906020018083116104fb57829003601f168201915b50508381038252845460026001821615610100026000190190911604808252602091909101908590801561058d5780601f106105625761010080835404028352916020019161058d565b820191906000526020600020905b81548152906001019060200180831161057057829003601f168201915b50509550505050505060405180910390f35b5050505050565b8280016001018555821561013a579182015b8281111561013a5782518260005055916020019190600101906105b8565b50506000838152602081815260408220835160029182018054818652948490209094600181161561010002600019011692909204601f90810184900483019391929186019083901061063f57805160ff19168380011785555b5061059f929150610142565b5090565b8280016001018555821561062f579182015b8281111561062f578251826000505591602001919060010190610651565b505050505050565b828001600101855582156102c4579182015b828111156102c4578251826000505591602001919060010190610689565b50506000848152600160208181526040832085516002918201805481875295849020909594851615610100026000190190941691909104601f908101839004840193919287019083901061070e57805160ff19168380011785555b5061073e929150610142565b82800160010185558215610702579182015b82811115610702578251826000505591602001919060010190610720565b5050600084815260016020818152604083208451600391909101805481865294839020909460029481161561010002600019011693909304601f90810183900484019391928601908390106107a657805160ff19168380011785555b5061066f929150610142565b8280016001018555821561079a579182015b8281111561079a5782518260005055916020019190600101906107b856",
    address: "0x9f1bbdf3f8d4755a46a3486e20157d90436e0ec5",
    generated_with: "2.0.9",
    contract_name: "Fossilizer"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Fossilizer error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Fossilizer error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Fossilizer error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Fossilizer error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Fossilizer = Contract;
  }

})();
